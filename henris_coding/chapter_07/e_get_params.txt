pipeline-1: Pipeline(memory=None,
     steps=[('sc', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=1, solver='lbfgs',
          tol=0.0001, verbose=0, warm_start=False))])
................................................................................
decisiontreeclassifier: DecisionTreeClassifier(class_weight=None, criterion='entropy', max_depth=1,
            max_features=None, max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, presort=False, random_state=0,
            splitter='best')
................................................................................
pipeline-2: Pipeline(memory=None,
     steps=[('sc', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=1, p=2,
           weights='uniform'))])
................................................................................
pipeline-1__memory: None
................................................................................
pipeline-1__steps: [('sc', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=1, solver='lbfgs',
          tol=0.0001, verbose=0, warm_start=False))]
................................................................................
pipeline-1__sc: StandardScaler(copy=True, with_mean=True, with_std=True)
................................................................................
pipeline-1__clf: LogisticRegression(C=0.001, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='warn',
          n_jobs=None, penalty='l2', random_state=1, solver='lbfgs',
          tol=0.0001, verbose=0, warm_start=False)
................................................................................
pipeline-1__sc__copy: True
................................................................................
pipeline-1__sc__with_mean: True
................................................................................
pipeline-1__sc__with_std: True
................................................................................
pipeline-1__clf__C: 0.001
................................................................................
pipeline-1__clf__class_weight: None
................................................................................
pipeline-1__clf__dual: False
................................................................................
pipeline-1__clf__fit_intercept: True
................................................................................
pipeline-1__clf__intercept_scaling: 1
................................................................................
pipeline-1__clf__max_iter: 100
................................................................................
pipeline-1__clf__multi_class: warn
................................................................................
pipeline-1__clf__n_jobs: None
................................................................................
pipeline-1__clf__penalty: l2
................................................................................
pipeline-1__clf__random_state: 1
................................................................................
pipeline-1__clf__solver: lbfgs
................................................................................
pipeline-1__clf__tol: 0.0001
................................................................................
pipeline-1__clf__verbose: 0
................................................................................
pipeline-1__clf__warm_start: False
................................................................................
decisiontreeclassifier__class_weight: None
................................................................................
decisiontreeclassifier__criterion: entropy
................................................................................
decisiontreeclassifier__max_depth: 1
................................................................................
decisiontreeclassifier__max_features: None
................................................................................
decisiontreeclassifier__max_leaf_nodes: None
................................................................................
decisiontreeclassifier__min_impurity_decrease: 0.0
................................................................................
decisiontreeclassifier__min_impurity_split: None
................................................................................
decisiontreeclassifier__min_samples_leaf: 1
................................................................................
decisiontreeclassifier__min_samples_split: 2
................................................................................
decisiontreeclassifier__min_weight_fraction_leaf: 0.0
................................................................................
decisiontreeclassifier__presort: False
................................................................................
decisiontreeclassifier__random_state: 0
................................................................................
decisiontreeclassifier__splitter: best
................................................................................
pipeline-2__memory: None
................................................................................
pipeline-2__steps: [('sc', StandardScaler(copy=True, with_mean=True, with_std=True)), ('clf', KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=1, p=2,
           weights='uniform'))]
................................................................................
pipeline-2__sc: StandardScaler(copy=True, with_mean=True, with_std=True)
................................................................................
pipeline-2__clf: KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
           metric_params=None, n_jobs=None, n_neighbors=1, p=2,
           weights='uniform')
................................................................................
pipeline-2__sc__copy: True
................................................................................
pipeline-2__sc__with_mean: True
................................................................................
pipeline-2__sc__with_std: True
................................................................................
pipeline-2__clf__algorithm: auto
................................................................................
pipeline-2__clf__leaf_size: 30
................................................................................
pipeline-2__clf__metric: minkowski
................................................................................
pipeline-2__clf__metric_params: None
................................................................................
pipeline-2__clf__n_jobs: None
................................................................................
pipeline-2__clf__n_neighbors: 1
................................................................................
pipeline-2__clf__p: 2
................................................................................
pipeline-2__clf__weights: uniform
................................................................................
